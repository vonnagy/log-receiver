
container {

  http {
    interface = "0.0.0.0"
    port = ${PORT}

    cidr {
      # This is a list of IP ranges to allow through. Can be empty.
      allow = []
      # This is a list of IP ranges to specifically deny access. Can be empty.
      deny = []
    }
  }

  metrics {
    # These are the metrics reporters
    reporters {
      Slf4j {
        # The name of the reporter class
        class = "com.github.vonnagy.service.container.metrics.reporting.Slf4jReporter"
        # Is the reporter enabled
        enabled = on
        # What is the interval to report on
        reporting-interval = 60s
        # What is the logger
        logger = "com.github.vonnagy.service.container.metrics"
      }
    }
  }
}

akka {
  loglevel = ${LOG_LEVEL}
}


log {
  processors {
    default {
      # The name of the processor class
      class = "logreceiver.processor.NullProcessor"
      # Is the processor enabled
      enabled = on
    }
    kinesis {
      # The name of the processor class
      class = "logreceiver.processor.kinesis.KinesisProcessor"
      # Is the processor enabled
      enabled = off
      # The region
      region = "todo"
      # The access key
      access-key = ${AWS_KEY}
      # The secret
      access-secret = ${AWS_SECRET}
      # Connection timeout
      timeout = 2s
      # Initial shard sizes
      streams {
        creation-retries = 3
        activate-timout = 5s

        log-stream {
          shards = 2
        }
        metric-stream {
          shards = 2
        }
      }
    }
  }
}